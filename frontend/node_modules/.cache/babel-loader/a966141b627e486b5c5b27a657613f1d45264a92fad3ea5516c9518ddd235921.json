{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vpmf2\\\\OneDrive - up.edu.mx\\\\Escritorio\\\\EDUREACT\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\n// src/pages/QuizPage.js\nimport './styles.css';\nimport './forossty.css';\n// src/pages/QuizPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CategoryList from '../components/CategoryList';\nimport PdfList from '../components/PdfList';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const {\n    categoria\n  } = useParams(); // Obtiene el parámetro \"categoria\" de la URL\n  const [categorias, setCategorias] = useState([]);\n  const [pdfs, setPdfs] = useState([]);\n  const [categoriaSeleccionada, setCategoriaSeleccionada] = useState(categoria);\n  const [error, setError] = useState(null);\n\n  // Define handleCategoriaClick para seleccionar una categoría\n  const handleCategoriaClick = async categoria => {\n    setCategoriaSeleccionada(categoria);\n    try {\n      const response = await axios.get(`/api/quizes/${categoria}`, {\n        withCredentials: true\n      });\n      setPdfs(response.data.pdfs);\n    } catch (error) {\n      console.error(\"Error al cargar los archivos PDF:\", error);\n      setError(\"Error al cargar los archivos PDF.\");\n    }\n  };\n\n  // Carga las categorías cuando se monta el componente\n  useEffect(() => {\n    const fetchCategorias = async () => {\n      try {\n        const response = await axios.get('/api/quizes', {\n          withCredentials: true\n        });\n        setCategorias(response.data.categorias);\n      } catch (error) {\n        console.error(\"Error al cargar las categorías:\", error);\n        setError(\"Error al cargar las categorías.\");\n      }\n    };\n    fetchCategorias();\n  }, []);\n\n  // Carga los PDFs de la categoría seleccionada cuando cambia `categoria`\n  useEffect(() => {\n    if (categoria) {\n      handleCategoriaClick(categoria);\n    }\n  }, [categoria]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Quizzes de \", categoriaSeleccionada]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container-90vh\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row clearfix\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(CategoryList, {\n            categorias: categorias,\n            onCategoriaClick: handleCategoriaClick,\n            categoriaSeleccionada: categoriaSeleccionada\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PdfList, {\n            pdfs: pdfs,\n            categoriaSeleccionada: categoriaSeleccionada,\n            basePath: \"/QUIZZ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPage, \"eX3jRXsUjV/V08PP7kQyxSCETXQ=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","CategoryList","PdfList","Navbar","jsxDEV","_jsxDEV","QuizPage","_s","categoria","categorias","setCategorias","pdfs","setPdfs","categoriaSeleccionada","setCategoriaSeleccionada","error","setError","handleCategoriaClick","response","get","withCredentials","data","console","fetchCategorias","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onCategoriaClick","basePath","_c","$RefreshReg$"],"sources":["C:/Users/vpmf2/OneDrive - up.edu.mx/Escritorio/EDUREACT/frontend/src/pages/QuizPage.js"],"sourcesContent":["// src/pages/QuizPage.js\r\nimport './styles.css';\r\nimport './forossty.css';\r\n// src/pages/QuizPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CategoryList from '../components/CategoryList';\r\nimport PdfList from '../components/PdfList';\r\nimport Navbar from '../components/Navbar';\r\n\r\nfunction QuizPage() {\r\n    const { categoria } = useParams(); // Obtiene el parámetro \"categoria\" de la URL\r\n    const [categorias, setCategorias] = useState([]);\r\n    const [pdfs, setPdfs] = useState([]);\r\n    const [categoriaSeleccionada, setCategoriaSeleccionada] = useState(categoria);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Define handleCategoriaClick para seleccionar una categoría\r\n    const handleCategoriaClick = async (categoria) => {\r\n        setCategoriaSeleccionada(categoria);\r\n        try {\r\n            const response = await axios.get(`/api/quizes/${categoria}`, { withCredentials: true });\r\n            setPdfs(response.data.pdfs);\r\n        } catch (error) {\r\n            console.error(\"Error al cargar los archivos PDF:\", error);\r\n            setError(\"Error al cargar los archivos PDF.\");\r\n        }\r\n    };\r\n\r\n    // Carga las categorías cuando se monta el componente\r\n    useEffect(() => {\r\n        const fetchCategorias = async () => {\r\n            try {\r\n                const response = await axios.get('/api/quizes', { withCredentials: true });\r\n                setCategorias(response.data.categorias);\r\n            } catch (error) {\r\n                console.error(\"Error al cargar las categorías:\", error);\r\n                setError(\"Error al cargar las categorías.\");\r\n            }\r\n        };\r\n\r\n        fetchCategorias();\r\n    }, []);\r\n\r\n    // Carga los PDFs de la categoría seleccionada cuando cambia `categoria`\r\n    useEffect(() => {\r\n        if (categoria) {\r\n            handleCategoriaClick(categoria);\r\n        }\r\n    }, [categoria]);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1>Quizzes de {categoriaSeleccionada}</h1>\r\n            {error && <p>{error}</p>}\r\n            <div className=\"container container-90vh\">\r\n                <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12\">\r\n                        <CategoryList categorias={categorias} onCategoriaClick={handleCategoriaClick} categoriaSeleccionada={categoriaSeleccionada} />\r\n                        <PdfList pdfs={pdfs} categoriaSeleccionada={categoriaSeleccionada} basePath=\"/QUIZZ\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizPage;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}