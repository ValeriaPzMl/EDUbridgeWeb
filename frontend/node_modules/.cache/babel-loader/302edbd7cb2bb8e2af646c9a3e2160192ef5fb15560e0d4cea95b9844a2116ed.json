{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vpmf2\\\\OneDrive - up.edu.mx\\\\Escritorio\\\\EDUREACT\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\n// src/pages/QuizPage.js\nimport './styles.css';\nimport './forossty.css';\nimport Navbar from '../components/Navbar';\n// src/pages/QuizPage.js\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CategoryList from '../components/CategoryList';\nimport PdfList from '../components/PdfList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const [categorias, setCategorias] = useState([]);\n  const [pdfs, setPdfs] = useState([]);\n  const [categoriaSeleccionada, setCategoriaSeleccionada] = useState(null);\n  useEffect(() => {\n    const fetchCategorias = async () => {\n      try {\n        const response = await axios.get('/api/quizes', {\n          withCredentials: true\n        });\n        console.log(\"Categorias de Quizzes:\", response.data.categorias); // Agregar esta línea\n        setCategorias(response.data.categorias);\n      } catch (error) {\n        console.error(\"Error al cargar las categorías:\", error);\n      }\n    };\n    fetchCategorias();\n  }, []);\n  const handleCategoriaClick = async categoria => {\n    setCategoriaSeleccionada(categoria);\n    try {\n      const response = await axios.get(`/api/quizes/${categoria}`, {\n        withCredentials: true\n      });\n      setPdfs(response.data.pdfs);\n    } catch (error) {\n      console.error(\"Error al cargar los archivos PDF:\", error);\n    }\n  };\n  const {\n    materia\n  } = useParams(); // Obtiene el parámetro \"materia\" de la URL\n  const [quizzes, setQuizzes] = useState([]);\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      try {\n        const response = await axios.get(`/api/quizes/${materia}`);\n        setQuizzes(response.data.quizzes);\n      } catch (err) {\n        console.error(\"Error al cargar los quizzes:\", err);\n      }\n    };\n    fetchQuizzes();\n  }, [materia]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container-90vh\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row clearfix\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(CategoryList, {\n            categorias: categorias,\n            onCategoriaClick: handleCategoriaClick,\n            categoriaSeleccionada: categoriaSeleccionada\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PdfList, {\n            pdfs: pdfs,\n            categoriaSeleccionada: categoriaSeleccionada,\n            basePath: \"/QUIZZ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPage, \"bsFfQJEWmcPElHD8NFBsb/2N5x8=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["Navbar","useParams","React","useState","useEffect","axios","CategoryList","PdfList","jsxDEV","_jsxDEV","QuizPage","_s","categorias","setCategorias","pdfs","setPdfs","categoriaSeleccionada","setCategoriaSeleccionada","fetchCategorias","response","get","withCredentials","console","log","data","error","handleCategoriaClick","categoria","materia","quizzes","setQuizzes","fetchQuizzes","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onCategoriaClick","basePath","_c","$RefreshReg$"],"sources":["C:/Users/vpmf2/OneDrive - up.edu.mx/Escritorio/EDUREACT/frontend/src/pages/QuizPage.js"],"sourcesContent":["// src/pages/QuizPage.js\r\nimport './styles.css';\r\nimport './forossty.css';\r\nimport Navbar from '../components/Navbar';\r\n// src/pages/QuizPage.js\r\nimport { useParams } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CategoryList from '../components/CategoryList';\r\nimport PdfList from '../components/PdfList';\r\n\r\nfunction QuizPage() {\r\n    const [categorias, setCategorias] = useState([]);\r\n    const [pdfs, setPdfs] = useState([]);\r\n    const [categoriaSeleccionada, setCategoriaSeleccionada] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCategorias = async () => {\r\n            try {\r\n                const response = await axios.get('/api/quizes', { withCredentials: true });\r\n                console.log(\"Categorias de Quizzes:\", response.data.categorias);  // Agregar esta línea\r\n                setCategorias(response.data.categorias);\r\n            } catch (error) {\r\n                console.error(\"Error al cargar las categorías:\", error);\r\n            }\r\n        };\r\n    \r\n        fetchCategorias();\r\n    }, []);\r\n\r\n    const handleCategoriaClick = async (categoria) => {\r\n        setCategoriaSeleccionada(categoria);\r\n        try {\r\n            const response = await axios.get(`/api/quizes/${categoria}`, { withCredentials: true });\r\n            setPdfs(response.data.pdfs);\r\n        } catch (error) {\r\n            console.error(\"Error al cargar los archivos PDF:\", error);\r\n        }\r\n    };\r\n    const { materia } = useParams(); // Obtiene el parámetro \"materia\" de la URL\r\n    const [quizzes, setQuizzes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/quizes/${materia}`);\r\n                setQuizzes(response.data.quizzes);\r\n            } catch (err) {\r\n                console.error(\"Error al cargar los quizzes:\", err);\r\n            }\r\n        };\r\n\r\n        fetchQuizzes();\r\n    }, [materia]);\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n        <div className=\"container container-90vh\">\r\n            <div className=\"row clearfix\">\r\n                <div className=\"col-lg-12\">\r\n                    <CategoryList categorias={categorias} onCategoriaClick={handleCategoriaClick} categoriaSeleccionada={categoriaSeleccionada} />\r\n                    <PdfList pdfs={pdfs} categoriaSeleccionada={categoriaSeleccionada} basePath=\"/QUIZZ\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}